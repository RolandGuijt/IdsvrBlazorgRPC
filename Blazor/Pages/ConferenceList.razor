@page "/"
@using Blazor.Services
@using RpcApi
@using System.Security.Claims
@inject IConferenceService conferenceService
@inject AuthenticationStateProvider authProvider
@attribute [Authorize]


@if (conferences == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-10 col-md-offset-2">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Location</th>
                        <th>Start of event</th>
                        <th>Attendees</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var conference in conferences)
                    {
                        <ConferenceListItem conference="@conference"></ConferenceListItem>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 col-md-offset-2">
            <a href="/addconference">Add</a>
        </div>
        @foreach (var claim in claims)
        {
            <div>@claim.Type @claim.Value</div>
        }
    </div>
}

@code {
    IEnumerable<Conference> conferences;
    IEnumerable<Claim> claims;

    protected override async Task OnInitializedAsync()
    {
        conferences = await conferenceService.GetAll();
        var state = await authProvider.GetAuthenticationStateAsync();
        if (state.User.Identity.IsAuthenticated)
        {
            claims = state.User.Claims;
        }
}
}